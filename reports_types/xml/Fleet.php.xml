<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Fleet.php" path="/">
    <totals>
      <lines total="111" comments="3" code="108" executable="21" executed="21" percent="100.00"/>
      <methods count="17" tested="17" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Mwl91\Tdd\Domain\Fleet" start="9" executable="21" executed="21" crap="20">
      <namespace name="Mwl91\Tdd\Domain"/>
      <method name="__construct" signature="__construct(array $cars, ?Money\Money $insuranceCost, int $cautionPercent, ?Mwl91\Tdd\Domain\ValueObjects\PickupPolicy $pickupPolicy)" start="11" end="18" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addCar" signature="addCar(Mwl91\Tdd\Domain\Car $car): void" start="20" end="23" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="count" signature="count(): int" start="25" end="28" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getCars" signature="getCars(): array" start="30" end="33" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addCars" signature="addCars(array $cars): void" start="35" end="38" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="deleteCar" signature="deleteCar(Mwl91\Tdd\Domain\Car $car): void" start="40" end="43" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="deleteId" signature="deleteId(Mwl91\Tdd\Domain\ValueObjects\CarId $carId): void" start="45" end="48" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setInsuranceCost" signature="setInsuranceCost(Money\Money $insuranceCost): void" start="53" end="60" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getInsuranceCost" signature="getInsuranceCost(): Money\Money" start="62" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setCautionPercent" signature="setCautionPercent(int $percent): void" start="67" end="74" crap="3" executable="3" executed="3" coverage="100"/>
      <method name="getCautionPercent" signature="getCautionPercent(): int" start="76" end="79" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__toString" signature="__toString(): string" start="81" end="84" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPickupPolicy" signature="setPickupPolicy(Mwl91\Tdd\Domain\ValueObjects\PickupPolicy $pickupPolicy): void" start="86" end="89" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getOfficePickupCost" signature="getOfficePickupCost(): Money\Money" start="91" end="94" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getAirportPickupCost" signature="getAirportPickupCost(): Money\Money" start="96" end="99" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getAddressPickupCost" signature="getAddressPickupCost(): Money\Money" start="101" end="104" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getOvertimePickupCost" signature="getOvertimePickupCost(): Money\Money" start="106" end="109" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanCreateFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testFleetMayNotHaveAnyCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCannotSetInsuranceCostLowerThenZero"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCatListingTest::testListCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCanSetCautionPercent"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionInvalidPercent"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionPercentHigherThen100"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCreateTest::testCanCreateNewFleet"/>
      </line>
      <line nr="22">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
      </line>
      <line nr="27">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanCreateFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testFleetMayNotHaveAnyCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
      </line>
      <line nr="32">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanCreateFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCatListingTest::testListCars"/>
      </line>
      <line nr="37">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
      </line>
      <line nr="42">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
      </line>
      <line nr="47">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
      </line>
      <line nr="55">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCannotSetInsuranceCostLowerThenZero"/>
      </line>
      <line nr="56">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCannotSetInsuranceCostLowerThenZero"/>
      </line>
      <line nr="59">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
      </line>
      <line nr="64">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
      </line>
      <line nr="69">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCanSetCautionPercent"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionInvalidPercent"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionPercentHigherThen100"/>
      </line>
      <line nr="70">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionInvalidPercent"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCannotSetCautionPercentHigherThen100"/>
      </line>
      <line nr="73">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCanSetCautionPercent"/>
      </line>
      <line nr="78">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCautionTest::testCanSetCautionPercent"/>
      </line>
      <line nr="83">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCatListingTest::testListCars"/>
      </line>
      <line nr="88">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
      </line>
      <line nr="93">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
      </line>
      <line nr="98">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
      </line>
      <line nr="103">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
      </line>
      <line nr="108">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\DeliveryCostTest::testCanSetDeliveryCost"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mwl91\Tdd\Domain</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Money\Money</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mwl91\Tdd\Domain\ValueObjects\CarId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Fleet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Countable</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_VARIABLE">$cars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">Money</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$insuranceCost</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$cautionPercent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_NAME_QUALIFIED">ValueObjects\PickupPolicy</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$pickupPolicy</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addCar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Car</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addCars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cars</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$cars</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deleteCar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Car</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FN">fn</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Car</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$existingCar</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$existingCar</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deleteId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CarId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$carId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FN">fn</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Car</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$existingCar</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$existingCar</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getKey</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$carId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @throws \InvalidArgumentException</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setInsuranceCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Money</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$insuranceCost</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$insuranceCost</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isNegative</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Insurance cost can not be lower than 0"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">insuranceCost</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$insuranceCost</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInsuranceCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Money</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">insuranceCost</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setCautionPercent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$percent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$percent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$percent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\OutOfBoundsException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Percent must be between 0 and 100"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cautionPercent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$percent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCautionPercent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cautionPercent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">join</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FN">fn</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Car</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBrand</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$car</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cars</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPickupPolicy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NAME_QUALIFIED">ValueObjects\PickupPolicy</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$pickupPolicy</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pickupPolicy</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$pickupPolicy</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="90"/>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOfficePickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Money</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pickupPolicy</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOfficePickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95"/>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAirportPickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Money</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pickupPolicy</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAirportPickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAddressPickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Money</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pickupPolicy</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAddressPickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOvertimePickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Money</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pickupPolicy</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOvertimePickupCost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>

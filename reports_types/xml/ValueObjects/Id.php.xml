<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Id.php" path="/ValueObjects">
    <totals>
      <lines total="40" comments="0" code="40" executable="7" executed="7" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Mwl91\Tdd\Domain\ValueObjects\Id" start="9" executable="7" executed="7" crap="6">
      <namespace name="Mwl91\Tdd\Domain\ValueObjects"/>
      <method name="__construct" signature="__construct(Ramsey\Uuid\UuidInterface $id)" start="11" end="15" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="tryFrom" signature="tryFrom(\Ramsey\Uuid\UuidInterface|string $uuid): static" start="17" end="24" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="make" signature="make(): static" start="26" end="29" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getId" signature="getId(): Ramsey\Uuid\UuidInterface" start="31" end="34" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__toString" signature="__toString(): string" start="36" end="39" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanCreateFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCannotSetInsuranceCostLowerThenZero"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanGenerateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCatListingTest::testListCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGetGeneratedId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetIdUsingString"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGenerateFleetId"/>
      </line>
      <line nr="19">
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetIdUsingString"/>
      </line>
      <line nr="20">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetIdUsingString"/>
      </line>
      <line nr="23">
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetIdUsingString"/>
      </line>
      <line nr="28">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanCreateFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarsToExistingFleetWithCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddCarToFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarsCreateTest::testCanAddMoreThenOneCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCanSetInsuranceCost"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetInsuranceCostTest::testCannotSetInsuranceCostLowerThenZero"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleet"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCarRemoveTest::testCanRemoveCarFromFleetUsingId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCar"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanGenerateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetCatListingTest::testListCars"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGetGeneratedId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGenerateFleetId"/>
      </line>
      <line nr="33">
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGetGeneratedId"/>
      </line>
      <line nr="38">
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanCreateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\CarTest::testCanGenerateCarId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGetGeneratedId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetId"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanCreateFleetIdUsingString"/>
        <covered by="Mwl91\Tests\Tdd\Unit\Fleet\FleetIdTest::testCanGenerateFleetId"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mwl91\Tdd\Domain\ValueObjects</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Ramsey\Uuid\Uuid</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Ramsey\Uuid\UuidInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Id</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UuidInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tryFrom</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UuidInterface</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$uuid</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$uuid</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$uuid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Uuid</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">fromString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$uuid</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$uuid</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Uuid</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">uuid4</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UuidInterface</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
